from z3 import *
from z3opt import *

constraints = []

f = Q(281474976710656,3125)
print f

u = find_upper_bound(f,[],1)
print "u =", u
l = find_upper_bound(-f,[],1)
print "l =", l

maximize(f, [], l, u, 0.1)


#fTol = 0.010000
#l, u = find_bounds(f, constraints, fTol)
#print l
#print u

#[x2, x1] = Reals('x2, x1')
#constraints = [x2 >= -20.000000, x1 >= -5.000000, x2 <= 5.000000, x1 <= 5.000000]
#f = ((((((((x1 * x1) + 1.000000) * (((2.000000 * x1) * (((((3.000000 * x1) * x1) + (2.000000 * x2)) - x1) * (1.000000 / ((x1 * x1) + 1.000000)))) * ((1.000000 / ((x1 * x1) + 1.000000)) * (x1 * (3.000000 * x1))))) + (((x1 * x1) + 1.000000) * (((((((3.000000 * x1) * x1) + (2.000000 * x2)) - x1) * (1.000000 / ((x1 * x1) + 1.000000))) - 3.000000) * ((2.000000 * x1) * ((1.000000 / ((x1 * x1) + 1.000000)) * (x1 * (3.000000 * x1))))))) + (((x1 * x1) + 1.000000) * ((x1 * x1) * (4.000000 * ((1.000000 / ((x1 * x1) + 1.000000)) * (x1 * (3.000000 * x1))))))) + (((3.000000 * x1) * x1) * ((1.000000 / ((x1 * x1) + 1.000000)) * (x1 * (3.000000 * x1))))) + ((((((3.000000 * x1) * x1) + (2.000000 * x2)) - x1) * (1.000000 / ((x1 * x1) + 1.000000))) * (x1 * (3.000000 * x1)))) + (3.000000 * ((1.000000 / ((x1 * x1) + 1.000000)) * (x1 * (3.000000 * x1)))))
#f = 3*(x1 ** 2)*(8*x1*x2+2*x2+4*(x1**4)+6*(x1**3)+6*(x1**2)-7*x1+3)/((x1**2)+1)
#print f
#fTol = 1.010000
#l, u = find_bounds(f, constraints, fTol)
#print l
#print u
